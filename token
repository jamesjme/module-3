// SPDX-License-Identifier: MIT
pragma solidity ^0.8.17;

import "@openzeppelin/contracts/token/ERC20/ERC20.sol";
import "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol";
import "@openzeppelin/contracts/access/Ownable.sol";

contract CustomToken is ERC20, ERC20Burnable, Ownable(msg.sender) {
    constructor(string memory name, string memory symbol) ERC20(name, symbol) {}

    function mint(address awardee, uint256 consignment) external onlyOwner {
        _mint(awardee, consignment);
    }

    function burn(uint256 consignment) public override {
        _burn(msg.sender, consignment);
    }

    function transfer(address awardee, uint256 consignment) public virtual override returns (bool) {
        _transfer(_msgSender(), awardee, consignment);
        return true;
    }
}
